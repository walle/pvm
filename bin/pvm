#!/usr/bin/env bash

PVM_VERSION="0.1.0"

OS=$(uname -s)

HAS_APACHE=false

BIN_DIR=/usr/bin/

list() {
  ls $PVM_PHPS_ROOT | sort
  if [[ -d $PVM_ROOT/original/ ]] ; then
    echo "original"
  fi
}

versions() {
  cat "$PVM_ROOT/config/known" | cut -d '.' -f 1-3 | cut -d '-' -f 2
}

usage() {
  pvm_version
  echo "usage: pvm <command> [<args>]"
  echo ""
  echo "   list         List all installed PHP versions"
  echo "   versions     List all known PHP versions"
  echo "   install      Install selected PHP version"
  echo "   use          Use selected PHP version"
}

pvm_version() {
  echo "pvm $PVM_VERSION"
}

install_version() {
  if ! tar_exists $1 ; then
    download_version $1
  fi
  verify_md5 $1
  untar_file $1
  compile $1
}

verify_md5() {
  MD5_COMMAND="md5sum $PVM_ROOT/tars/php-$1.tar.gz | cut -d ' ' -f 1"
  if [ "$OS" == "Darwin" ] ; then
    MD5_COMMAND="md5 $PVM_ROOT/tars/php-$1.tar.gz | cut -d ' ' -f 4"
  fi
  KNOWN_MD5=$(grep $1 "$PVM_ROOT/config/known" | cut -d '=' -f 2)
  MD5=$(eval "$MD5_COMMAND")
  if [ "$MD5" != "$KNOWN_MD5" ] ; then
    echo "MD5 mismatch, try to download the file again!"
    exit 1
  fi
}

tar_exists() {
  if [ -e "$PVM_ROOT/tars/php-$1.tar.gz" ] ; then
    return 0
  else
    return 1
  fi
}

download_version() {
  if versions | grep -q $1 ; then
    download_tar $1
  else
    usage
    exit 1
  fi
}

untar_file() {
  tar xvfz "$PVM_ROOT/tars/php-$1.tar.gz" -C "$PVM_ROOT/srcs"
}

compile() {
  cd "$PVM_ROOT/srcs/php-$1"
  CONFIG=$(cat "$PVM_ROOT/config/config-parameters")

  if [[ "$CONFIG" =~ --with-apxs2 ]] ; then
    $HAS_APACHE=true
  fi

  ./configure --prefix="$PVM_ROOT/phps/php-$1" $CONFIG

  if [[ $HAS_APACHE == true ]] ; then
    sudo make install
    ## TODO: Move libphp5.so to the correct php dir and link it back
  else
    make install
  fi

  verify_install $1
}

verify_install() {
  HELLO=$($PVM_ROOT/phps/php-$1/bin/php "$PVM_ROOT/test/test.php")
  echo $HELLO
  if [ "Hello $1" != "$HELLO" ] ; then
    echo "Something went wrong with install!"
    exit 1
  fi
}

use() {
  if [[ "$1" == "original" ]] ; then
    if [[ ! -d $PVM_ROOT/original/ ]] ; then
      echo "You haven't saved a original install"
      exit 1
    fi
    sudo mv -f $PVM_ROOT/original/* $BIN_DIR/
    rmdir $PVM_ROOT/original
    exit 0
  fi

  if [[ ! -d $PVM_ROOT/phps/php-$1 ]] ; then
    echo "You don't have php-$1 installed!"
    echo "Install it with:"
    echo "\$ pvm install $1"
    exit 1
  fi

  BINS=$(ls $PVM_ROOT/phps/php-$1/bin)

  for bin in ${BINS[@]}
  do
    if [[ -f "$BIN_DIR/$bin" ]] ; then
      if [[ ! -d $PVM_ROOT/original/ ]] ; then
        mkdir $PVM_ROOT/original/
      fi
      if [[ ! -h "$BIN_DIR/$bin" ]] ; then
        sudo mv $BIN_DIR/$bin $PVM_ROOT/original/
      else
        sudo unlink $BIN_DIR/$bin
      fi
    fi
  done

  sudo ln -s $PVM_ROOT/phps/php-$1/bin/* $BIN_DIR/

  ## TODO: Use correct libphp5.so in apache modules
}

download_tar() {
  wget -O "tars/php-$1.tar.gz" "http://php.net/get/php-$1.tar.gz/from/this/mirror"
}

bootstrap() {
  hash wget tar 2>&- && return
  echo "You don't seem to have the necessary prerequisites for running pvm."
  echo ""
  echo "Please make sure you have the following:"
  echo "   * wget"
  echo "   * tar"

  exit 1
}

DEBUG=true

if $DEBUG ; then
  PVM_ROOT=$(pwd)
else
  PVM_ROOT="$HOME/.pvm"
fi

PVM_PHPS_ROOT="$PVM_ROOT/phps"

bootstrap

case $1 in
  "list" )
    list
    ;;
  "versions" )
    versions
    ;;
  "install" )
    install_version $2
    ;;
  "verify" )
    verify_install $2
    ;;
  "use" )
    use $2
    ;;
  "--version" )
    pvm_version
    ;;
  "" | "-h" | "--help" )
    usage
    ;;
  *)
esac

exit 0
